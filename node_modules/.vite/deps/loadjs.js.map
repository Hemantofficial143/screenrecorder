{
  "version": 3,
  "sources": ["../../loadjs/dist/loadjs.umd.js"],
  "sourcesContent": ["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathname = path.replace(/[\\?|#].*$/, ''),\n      pathStripped = path.replace(/^(css|img|module|nomodule)!/, ''),\n      isLegacyIECss,\n      hasModuleSupport,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(pathname)) {\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped;\n\n    // tag IE9+\n    isLegacyIECss = 'hideFocus' in e;\n\n    // use preload in IE Edge (to detect load errors)\n    if (isLegacyIECss && e.relList) {\n      isLegacyIECss = 0;\n      e.rel = 'preload';\n      e.as = 'style';\n    }\n  } else if (/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = pathStripped;\n    e.async = async === undefined ? true : async;\n\n    // handle es modules\n    // modern browsers:\n    //   module: add to dom with type=\"module\"\n    //   nomodule: call success() callback without adding to dom\n    // legacy browsers:\n    //   module: call success() callback without adding to dom\n    //   nomodule: add to dom with default type (\"text/javascript\")\n    hasModuleSupport = 'noModule' in e;\n    if (/^module!/.test(pathname)) {\n      if (!hasModuleSupport) return callbackFn(path, 'l');\n      e.type = \"module\";\n    } else if (/^nomodule!/.test(pathname) && hasModuleSupport) return callbackFn(path, 'l');\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // treat empty stylesheets as failures to get around lack of onerror\n    // support in IE9-11\n    if (isLegacyIECss) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    } else if (e.rel == 'preload' && e.as == 'style') {\n      // activate preloaded stylesheets\n      return e.rel = 'stylesheet'; // jshint ignore:line\n    }\n    \n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n *   callback or (3) object literal with success/error arguments, numRetries,\n *   etc.\n * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n *   literal with success/error arguments, numRetries, etc.\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  function loadFn(resolve, reject) {\n    loadFiles(paths, function (pathsNotFound) {\n      // execute callbacks\n      executeCallbacks(args, pathsNotFound);\n      \n      // resolve Promise\n      if (resolve) {\n        executeCallbacks({success: resolve, error: reject}, pathsNotFound);\n      }\n\n      // publish bundle load event\n      publish(bundleId, pathsNotFound);\n    }, args);\n  }\n  \n  if (args.returnPromise) return new Promise(loadFn);\n  else loadFn();\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n"],
  "mappings": "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",
  "names": ["bundleId"]
}
