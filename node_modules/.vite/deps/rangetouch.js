import "./chunk-HFNDKYVF.js";

// node_modules/rangetouch/dist/rangetouch.mjs
function _classCallCheck(e, t) {
  if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, t) {
  for (var n = 0; n < t.length; n++) {
    var r = t[n];
    r.enumerable = r.enumerable || false, r.configurable = true, "value" in r && (r.writable = true), Object.defineProperty(e, r.key, r);
  }
}
function _createClass(e, t, n) {
  return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e;
}
function _defineProperty(e, t, n) {
  return t in e ? Object.defineProperty(e, t, { value: n, enumerable: true, configurable: true, writable: true }) : e[t] = n, e;
}
function ownKeys(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(t2) {
      return Object.getOwnPropertyDescriptor(e, t2).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function _objectSpread2(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = null != arguments[t] ? arguments[t] : {};
    t % 2 ? ownKeys(Object(n), true).forEach(function(t2) {
      _defineProperty(e, t2, n[t2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ownKeys(Object(n)).forEach(function(t2) {
      Object.defineProperty(e, t2, Object.getOwnPropertyDescriptor(n, t2));
    });
  }
  return e;
}
var defaults = { addCSS: true, thumbWidth: 15, watch: true };
function matches(e, t) {
  return (function() {
    return Array.from(document.querySelectorAll(t)).includes(this);
  }).call(e, t);
}
function trigger(e, t) {
  if (e && t) {
    var n = new Event(t, { bubbles: true });
    e.dispatchEvent(n);
  }
}
var getConstructor = function(e) {
  return null != e ? e.constructor : null;
};
var instanceOf = function(e, t) {
  return !!(e && t && e instanceof t);
};
var isNullOrUndefined = function(e) {
  return null == e;
};
var isObject = function(e) {
  return getConstructor(e) === Object;
};
var isNumber = function(e) {
  return getConstructor(e) === Number && !Number.isNaN(e);
};
var isString = function(e) {
  return getConstructor(e) === String;
};
var isBoolean = function(e) {
  return getConstructor(e) === Boolean;
};
var isFunction = function(e) {
  return getConstructor(e) === Function;
};
var isArray = function(e) {
  return Array.isArray(e);
};
var isNodeList = function(e) {
  return instanceOf(e, NodeList);
};
var isElement = function(e) {
  return instanceOf(e, Element);
};
var isEvent = function(e) {
  return instanceOf(e, Event);
};
var isEmpty = function(e) {
  return isNullOrUndefined(e) || (isString(e) || isArray(e) || isNodeList(e)) && !e.length || isObject(e) && !Object.keys(e).length;
};
var is = { nullOrUndefined: isNullOrUndefined, object: isObject, number: isNumber, string: isString, boolean: isBoolean, function: isFunction, array: isArray, nodeList: isNodeList, element: isElement, event: isEvent, empty: isEmpty };
function getDecimalPlaces(e) {
  var t = "".concat(e).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
  return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0;
}
function round(e, t) {
  if (1 > t) {
    var n = getDecimalPlaces(t);
    return parseFloat(e.toFixed(n));
  }
  return Math.round(e / t) * t;
}
var RangeTouch = function() {
  function e(t, n) {
    _classCallCheck(this, e), is.element(t) ? this.element = t : is.string(t) && (this.element = document.querySelector(t)), is.element(this.element) && is.empty(this.element.rangeTouch) && (this.config = _objectSpread2({}, defaults, {}, n), this.init());
  }
  return _createClass(e, [{ key: "init", value: function() {
    e.enabled && (this.config.addCSS && (this.element.style.userSelect = "none", this.element.style.webKitUserSelect = "none", this.element.style.touchAction = "manipulation"), this.listeners(true), this.element.rangeTouch = this);
  } }, { key: "destroy", value: function() {
    e.enabled && (this.config.addCSS && (this.element.style.userSelect = "", this.element.style.webKitUserSelect = "", this.element.style.touchAction = ""), this.listeners(false), this.element.rangeTouch = null);
  } }, { key: "listeners", value: function(e2) {
    var t = this, n = e2 ? "addEventListener" : "removeEventListener";
    ["touchstart", "touchmove", "touchend"].forEach(function(e3) {
      t.element[n](e3, function(e4) {
        return t.set(e4);
      }, false);
    });
  } }, { key: "get", value: function(t) {
    if (!e.enabled || !is.event(t)) return null;
    var n, r = t.target, i = t.changedTouches[0], o = parseFloat(r.getAttribute("min")) || 0, s = parseFloat(r.getAttribute("max")) || 100, u = parseFloat(r.getAttribute("step")) || 1, c = r.getBoundingClientRect(), a = 100 / c.width * (this.config.thumbWidth / 2) / 100;
    return 0 > (n = 100 / c.width * (i.clientX - c.left)) ? n = 0 : 100 < n && (n = 100), 50 > n ? n -= (100 - 2 * n) * a : 50 < n && (n += 2 * (n - 50) * a), o + round(n / 100 * (s - o), u);
  } }, { key: "set", value: function(t) {
    e.enabled && is.event(t) && !t.target.disabled && (t.preventDefault(), t.target.value = this.get(t), trigger(t.target, "touchend" === t.type ? "change" : "input"));
  } }], [{ key: "setup", value: function(t) {
    var n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}, r = null;
    if (is.empty(t) || is.string(t) ? r = Array.from(document.querySelectorAll(is.string(t) ? t : 'input[type="range"]')) : is.element(t) ? r = [t] : is.nodeList(t) ? r = Array.from(t) : is.array(t) && (r = t.filter(is.element)), is.empty(r)) return null;
    var i = _objectSpread2({}, defaults, {}, n);
    if (is.string(t) && i.watch) {
      var o = new MutationObserver(function(n2) {
        Array.from(n2).forEach(function(n3) {
          Array.from(n3.addedNodes).forEach(function(n4) {
            is.element(n4) && matches(n4, t) && new e(n4, i);
          });
        });
      });
      o.observe(document.body, { childList: true, subtree: true });
    }
    return r.map(function(t2) {
      return new e(t2, n);
    });
  } }, { key: "enabled", get: function() {
    return "ontouchstart" in document.documentElement;
  } }]), e;
}();
var rangetouch_default = RangeTouch;
export {
  rangetouch_default as default
};
//# sourceMappingURL=rangetouch.js.map
